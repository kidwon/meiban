{"version":3,"file":"js/951.6f2734ac.js","mappings":"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","sources":["webpack://meiban-app/./node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n/**\n * Fires when the camera has been transformed by the controls.\n *\n * @event OrbitControls#change\n * @type {Object}\n */\nconst _changeEvent = { type: 'change' };\n\n/**\n * Fires when an interaction was initiated.\n *\n * @event OrbitControls#start\n * @type {Object}\n */\nconst _startEvent = { type: 'start' };\n\n/**\n * Fires when an interaction has finished.\n *\n * @event OrbitControls#end\n * @type {Object}\n */\nconst _endEvent = { type: 'end' };\n\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\n\n/**\n * Orbit controls allow the camera to orbit around a target.\n *\n * OrbitControls performs orbiting, dollying (zooming), and panning. Unlike {@link TrackballControls},\n * it maintains the \"up\" direction `object.up` (+Y by default).\n *\n * - Orbit: Left mouse / touch: one-finger move.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move.\n *\n * ```js\n * const controls = new OrbitControls( camera, renderer.domElement );\n *\n * // controls.update() must be called after any manual changes to the camera's transform\n * camera.position.set( 0, 20, 100 );\n * controls.update();\n *\n * function animate() {\n *\n * \t// required if controls.enableDamping or controls.autoRotate are set to true\n * \tcontrols.update();\n *\n * \trenderer.render( scene, camera );\n *\n * }\n * ```\n *\n * @augments Controls\n * @three_import import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n */\nclass OrbitControls extends Controls {\n\n\t/**\n\t * Constructs a new controls instance.\n\t *\n\t * @param {Object3D} object - The object that is managed by the controls.\n\t * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n\t */\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t/**\n\t\t * The focus point of the controls, the `object` orbits around this.\n\t\t * It can be updated manually at any point to change the focus of the controls.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target = new Vector3();\n\n\t\t/**\n\t\t * The focus point of the `minTargetRadius` and `maxTargetRadius` limits.\n\t\t * It can be updated manually at any point to change the center of interest\n\t\t * for the `target`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.cursor = new Vector3();\n\n\t\t/**\n\t\t * How far you can dolly in (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minDistance = 0;\n\n\t\t/**\n\t\t * How far you can dolly out (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxDistance = Infinity;\n\n\t\t/**\n\t\t * How far you can zoom in (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minZoom = 0;\n\n\t\t/**\n\t\t * How far you can zoom out (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxZoom = Infinity;\n\n\t\t/**\n\t\t * How close you can get the target to the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minTargetRadius = 0;\n\n\t\t/**\n\t\t * How far you can move the target from the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t/**\n\t\t * How far you can orbit vertically, lower limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minPolarAngle = 0;\n\n\t\t/**\n\t\t * How far you can orbit vertically, upper limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Math.PI\n\t\t */\n\t\tthis.maxPolarAngle = Math.PI;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, lower limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.minAzimuthAngle = - Infinity;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, upper limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.maxAzimuthAngle = Infinity;\n\n\t\t/**\n\t\t * Set to `true` to enable damping (inertia), which can be used to give a sense of weight\n\t\t * to the controls. Note that if this is enabled, you must call `update()` in your animation\n\t\t * loop.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.enableDamping = false;\n\n\t\t/**\n\t\t * The damping inertia used if `enableDamping` is set to `true`.\n\t\t *\n\t\t * Note that for this to work, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0.05\n\t\t */\n\t\tthis.dampingFactor = 0.05;\n\n\t\t/**\n\t\t * Enable or disable zooming (dollying) of the camera.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableZoom = true;\n\n\t\t/**\n\t\t * Speed of zooming / dollying.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable horizontal and vertical rotation of the camera.\n\t\t *\n\t\t * Note that it is possible to disable a single axis by setting the min and max of the\n\t\t * `minPolarAngle` or `minAzimuthAngle` to the same value, which will cause the vertical\n\t\t * or horizontal rotation to be fixed at that value.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableRotate = true;\n\n\t\t/**\n\t\t * Speed of rotation.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t/**\n\t\t * How fast to rotate the camera when the keyboard is used.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable camera panning.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enablePan = true;\n\n\t\t/**\n\t\t * Speed of panning.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.panSpeed = 1.0;\n\n\t\t/**\n\t\t * Defines how the camera's position is translated when panning. If `true`, the camera pans\n\t\t * in screen space. Otherwise, the camera pans in the plane orthogonal to the camera's up\n\t\t * direction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.screenSpacePanning = true;\n\n\t\t/**\n\t\t * How fast to pan the camera when the keyboard is used in\n\t\t * pixels per keypress.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 7\n\t\t */\n\t\tthis.keyPanSpeed = 7.0;\n\n\t\t/**\n\t\t * Setting this property to `true` allows to zoom to the cursor's position.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.zoomToCursor = false;\n\n\t\t/**\n\t\t * Set to true to automatically rotate around the target\n\t\t *\n\t\t * Note that if this is enabled, you must call `update()` in your animation loop.\n\t\t * If you want the auto-rotate speed to be independent of the frame rate (the refresh\n\t\t * rate of the display), you must pass the time `deltaTime`, in seconds, to `update()`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.autoRotate = false;\n\n\t\t/**\n\t\t * How fast to rotate around the target if `autoRotate` is `true`. The default  equates to 30 seconds\n\t\t * per orbit at 60fps.\n\t\t *\n\t\t * Note that if `autoRotate` is enabled, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 2\n\t\t */\n\t\tthis.autoRotateSpeed = 2.0;\n\n\t\t/**\n\t\t * This object contains references to the keycodes for controlling camera panning.\n\t\t *\n\t\t * ```js\n\t\t * controls.keys = {\n\t\t * \tLEFT: 'ArrowLeft', //left arrow\n\t\t * \tUP: 'ArrowUp', // up arrow\n\t\t * \tRIGHT: 'ArrowRight', // right arrow\n\t\t * \tBOTTOM: 'ArrowDown' // down arrow\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t/**\n\t\t * This object contains references to the mouse actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tLEFT: THREE.MOUSE.ROTATE,\n\t\t * \tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t * \tRIGHT: THREE.MOUSE.PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t/**\n\t\t * This object contains references to the touch actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tONE: THREE.TOUCH.ROTATE,\n\t\t * \tTWO: THREE.TOUCH.DOLLY_PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target0 = this.target.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position0 = this.object.position.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect( this.domElement );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect( element ) {\n\n\t\tsuper.connect( element );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\t/**\n\t * Get the current vertical rotation, in radians.\n\t *\n\t * @return {number} The current vertical rotation, in radians.\n\t */\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\t/**\n\t * Get the current horizontal rotation, in radians.\n\t *\n\t * @return {number} The current horizontal rotation, in radians.\n\t */\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\t/**\n\t * Returns the distance from the camera to the target.\n\t *\n\t * @return {number} The distance from the camera to the target.\n\t */\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\t/**\n\t * Adds key event listeners to the given DOM element.\n\t * `window` is a recommended argument for using this method.\n\t *\n\t * @param {HTMLDOMElement} domElement - The DOM element\n\t */\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\t/**\n\t * Removes the key event listener previously defined with `listenToKeyEvents()`.\n\t */\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Save the current state of the controls. This can later be recovered with `reset()`.\n\t */\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\t/**\n\t * Reset the controls to their state from either the last time the `saveState()`\n\t * was called, or the initial state.\n\t */\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"names":["_changeEvent","type","_startEvent","_endEvent","_ray","Ray","_plane","Plane","_TILT_LIMIT","Math","cos","MathUtils","DEG2RAD","_v","Vector3","_twoPI","PI","_STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","_EPS","OrbitControls","_Controls","object","_this","domElement","arguments","length","undefined","_classCallCheck","_callSuper","state","target","cursor","minDistance","maxDistance","Infinity","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","keyRotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","_lastPosition","_lastQuaternion","Quaternion","_lastTargetPosition","_quat","setFromUnitVectors","up","_quatInverse","invert","_spherical","Spherical","_sphericalDelta","_scale","_panOffset","_rotateStart","Vector2","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_dollyDirection","_mouse","_performCursorZoom","_pointers","_pointerPositions","_controlActive","_onPointerMove","onPointerMove","bind","_onPointerDown","onPointerDown","_onPointerUp","onPointerUp","_onContextMenu","onContextMenu","_onMouseWheel","onMouseWheel","_onKeyDown","onKeyDown","_onTouchStart","onTouchStart","_onTouchMove","onTouchMove","_onMouseDown","onMouseDown","_onMouseMove","onMouseMove","_interceptControlDown","interceptControlDown","_interceptControlUp","interceptControlUp","connect","update","_inherits","_createClass","key","value","element","_superPropGet","this","addEventListener","passive","document","getRootNode","capture","style","touchAction","removeEventListener","stopListenToKeyEvents","disconnect","phi","theta","distanceTo","copy","updateProjectionMatrix","dispatchEvent","deltaTime","sub","applyQuaternion","setFromVector3","_rotateLeft","_getAutoRotationAngle","min","max","isFinite","makeSafe","addScaledVector","add","clampLength","zoomChanged","isOrthographicCamera","radius","_clampDistance","prevRadius","setFromSpherical","lookAt","multiplyScalar","set","newRadius","isPerspectiveCamera","radiusDelta","updateMatrixWorld","mouseBefore","x","y","unproject","prevZoom","mouseAfter","console","warn","transformDirection","matrix","origin","direction","abs","dot","setFromNormalAndCoplanarPoint","intersectPlane","distanceToSquared","quaternion","delta","normalizedDelta","pow","angle","distance","objectMatrix","setFromMatrixColumn","crossVectors","deltaX","deltaY","targetDistance","tan","fov","_panLeft","clientHeight","_panUp","right","left","clientWidth","top","bottom","dollyScale","rect","getBoundingClientRect","dx","dy","w","width","h","height","normalize","dist","event","clientX","clientY","_updateZoomParameters","subVectors","_rotateUp","_dollyOut","_getZoomScale","_dollyIn","_pan","needsUpdate","code","ctrlKey","metaKey","shiftKey","preventDefault","pageX","pageY","_getSecondPointerPosition","sqrt","_handleTouchStartDolly","_handleTouchStartPan","_handleTouchStartRotate","centerX","centerY","_handleTouchMoveDolly","_handleTouchMovePan","_handleTouchMoveRotate","push","pointerId","i","splice","mode","deltaMode","newEvent","Controls","enabled","setPointerCapture","_isTrackingPointer","_addPointer","pointerType","_removePointer","releasePointerCapture","mouseAction","button","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseDownRotate","_handleMouseMoveRotate","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseWheel","_customWheelEvent","_handleKeyDown","_trackPointer","_handleTouchStartDollyPan","DOLLY_ROTATE","_handleTouchStartDollyRotate","_handleTouchMoveDollyPan","_handleTouchMoveDollyRotate"],"sourceRoot":""}